// This file was auto-generated by Fern from our API Definition.

import * as FernDemoApi from "../../src/api/index";
import { FernDemoApiClient } from "../../src/Client";
import { mockServerPool } from "../mock-server/MockServerPool";

describe("Imdb", () => {
    test("createMovie", async () => {
        const server = mockServerPool.createServer();
        const client = new FernDemoApiClient({ environment: server.baseUrl });
        const rawRequestBody = { title: "title", rating: 1.1 };
        const rawResponseBody = "string";
        server
            .mockEndpoint()
            .post("/movies/create-movie")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.imdb.createMovie({
            title: "title",
            rating: 1.1,
        });
        expect(response).toEqual("string");
    });

    test("getMovie (1)", async () => {
        const server = mockServerPool.createServer();
        const client = new FernDemoApiClient({ environment: server.baseUrl });

        const rawResponseBody = { id: "tt0111161", title: "The Shawshank Redemption", rating: 9.3 };
        server.mockEndpoint().get("/movies/tt0111161").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.imdb.getMovie("tt0111161");
        expect(response).toEqual({
            id: "tt0111161",
            title: "The Shawshank Redemption",
            rating: 9.3,
        });
    });

    test("getMovie (2)", async () => {
        const server = mockServerPool.createServer();
        const client = new FernDemoApiClient({ environment: server.baseUrl });

        const rawResponseBody = "tt1234";
        server.mockEndpoint().get("/movies/tt1234").respondWith().statusCode(404).jsonBody(rawResponseBody).build();

        await expect(async () => {
            return await client.imdb.getMovie("tt1234");
        }).rejects.toThrow(FernDemoApi.MovieDoesNotExistError);
    });
});
